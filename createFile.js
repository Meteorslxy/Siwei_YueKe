const fs = require("fs"); const path = require("path"); const filePath = path.join(process.cwd(), "utils", "courseCalendar.js"); const content = `// 课程日历功能\n// 包含对课程日历的处理方法\n\n// 返回当前学期的开始和结束日期\nfunction getCurrentSemesterDates() {\n  const now = new Date();\n  const currentYear = now.getFullYear();\n  const currentMonth = now.getMonth() + 1;\n  \n  let startDate, endDate;\n  \n  // 假设春季学期为2月到7月，秋季学期为9月到1月\n  if (currentMonth >= 2 && currentMonth <= 7) {\n    // 春季学期\n    startDate = new Date(currentYear, 1, 1); // 2月1日\n    endDate = new Date(currentYear, 6, 31); // 7月31日\n  } else {\n    // 秋季学期\n    startDate = new Date(currentYear, 8, 1); // 9月1日\n    if (currentMonth >= 9) {\n      endDate = new Date(currentYear + 1, 0, 31); // 次年1月31日\n    } else {\n      endDate = new Date(currentYear, 0, 31); // 本年1月31日\n      startDate = new Date(currentYear - 1, 8, 1); // 上年9月1日\n    }\n  }\n  \n  return { startDate, endDate };\n}\n\n// 返回当前周数\nfunction getCurrentWeek() {\n  const { startDate } = getCurrentSemesterDates();\n  const now = new Date();\n  \n  // 计算开始日期到现在的天数差\n  const diffTime = Math.abs(now - startDate);\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  \n  // 计算周数（向上取整）\n  return Math.ceil(diffDays / 7);\n}\n\n// 返回指定日期是周几\nfunction getDayOfWeek(date) {\n  const days = ["周日", "周一", "周二", "周三", "周四", "周五", "周六"];\n  return days[date.getDay()];\n}\n\n// 生成未来一周的日期\nfunction getNextWeekDates() {\n  const now = new Date();\n  const weekDates = [];\n  \n  for (let i = 0; i < 7; i++) {\n    const date = new Date(now);\n    date.setDate(now.getDate() + i);\n    weekDates.push({\n      date: date,\n      dayOfWeek: getDayOfWeek(date),\n      dateString: \`\${date.getMonth() + 1}月\${date.getDate()}日\`\n    });\n  }\n  \n  return weekDates;\n}\n\nmodule.exports = {\n  getCurrentSemesterDates,\n  getCurrentWeek,\n  getDayOfWeek,\n  getNextWeekDates\n};`; fs.writeFileSync(filePath, content, "utf8"); console.log("文件已成功创建:", filePath);
