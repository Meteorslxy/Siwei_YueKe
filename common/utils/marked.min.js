/**
 * Simplified marked - a markdown parser
 * Copyright (c) 2023, Claude
 * All rights reserved.
 * License: MIT
 */

// 简化版的Markdown解析器
function marked(src) {
  // 基本的markdown转HTML
  let html = src
    // 标题转换
    .replace(/^# (.*$)/gm, '<h1>$1</h1>')
    .replace(/^## (.*$)/gm, '<h2>$1</h2>')
    .replace(/^### (.*$)/gm, '<h3>$1</h3>')
    .replace(/^#### (.*$)/gm, '<h4>$1</h4>')
    
    // 列表转换
    .replace(/^\* (.*$)/gm, '<ul><li>$1</li></ul>')
    .replace(/^- (.*$)/gm, '<ul><li>$1</li></ul>')
    .replace(/^[0-9]+\. (.*$)/gm, '<ol><li>$1</li></ol>')
    
    // 段落转换 - 连续的两个换行符表示段落
    .replace(/\n\n/g, '</p><p>')
    
    // 强调和加粗
    .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
    .replace(/\*(.*?)\*/g, '<em>$1</em>')
    
    // 链接
    .replace(/\[(.*?)\]\((.*?)\)/g, '<a href="$2">$1</a>')
    
    // 代码块
    .replace(/```([\s\S]*?)```/g, '<pre><code>$1</code></pre>')
    
    // 行内代码
    .replace(/`(.*?)`/g, '<code>$1</code>')
    
    // 水平线
    .replace(/^\-\-\-$/gm, '<hr>')
    
    // 引用
    .replace(/^> (.*$)/gm, '<blockquote>$1</blockquote>');

  // 修复列表标签问题
  html = html
    .replace(/<\/ul>\s*<ul>/g, '')
    .replace(/<\/ol>\s*<ol>/g, '');
  
  // 确保整个内容被包裹在<p>标签内
  if (!html.startsWith('<')) {
    html = '<p>' + html;
  }
  if (!html.endsWith('>')) {
    html += '</p>';
  }
  
  return html;
}

export default marked; 